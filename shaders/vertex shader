#version 400 core

uniform mat4 projectionMatrix;

in vec3 position;
in vec4 color;
in vec3 side;
in vec3 normal;

out vec4 geometryColor;
out vec4 A;
out vec4 B;
out vec4 C;
out vec4 D;

void main(void)
{
        vec3 pnt = position;
        vec3 sd = side;
        gl_Position   = projectionMatrix * vec4(pnt, 1.0);
        A = projectionMatrix * vec4(pnt, 1.0);
        pnt += sd;
        sd = cross(side, normal);
        B = projectionMatrix * vec4(pnt, 1.0);
        pnt += sd;
        sd = cross(sd, normal);
        C = projectionMatrix * vec4(pnt, 1.0);
        D = projectionMatrix * vec4(pnt + sd, 1.0);

        geometryColor = pow(color, vec4(1.0 / 2.2));
}
